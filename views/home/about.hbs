<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>

<div class="demo-notes">
  <h1 class="about">About Team Guinea pig</h1>
    <p>
      <h1>Planning:</h1>
      - used a Miro board to build diagram - 
      <h3><a href="https://miro.com/app/board/uXjVPUicWbE=/">Link to the Project Diagram</a></h3>
      - adapted the existing project Trello board - 
      <h3><a href="https://trello.com/b/xq4pMzwv/team-guinea-pig">Link to the Project Trello Board</a></h3>
      - created a project git repository - 
      <h3><a href="https://github.com/codingoswin/Team-Guinea-pig">Link to the Project GitHub Repository</a></h3>
      - took time to get familiar with the legacy codebase (MongoDB, Cypress, Express MVC controllers, routes, etc.
      <br>
      <h1>Test coverage, quality, and deployment pipeline:</h1>
      - Followed TDD process, writing tests prior to implementation:
      <br>
      - ensured that any changes to the schemas didn't break the jest tests
      <br>
      - 100% jest code coverage, but recognised that this wasn't testing front-end functionality
      <br>
      - therefore wrote extensive cypress tests
      <br>
      - git workflow, working on branches, creating pull requests (instituted peer PR approval before merge rule)
      <br>
      - ensured all tests were passing for everyone in the team before moving on
      <br>
      - 138 commits
      <br>
      <h1>Documenting learning:</h1>
      - trello board
      <br>
      - git history
      <br>
      - discussion with team - Friday retro and catch ups
      <br>
      - notes from lots of research on the existing codebase and unfamiliar frameworks, etc.
      <br>
      <h1>Team challenges and successes</h1>
      - Got beyond MVP working app, with all cypress and jest tests passing
      <br>
      - Got better at debugging
      <br>
      - Have learned that front-end code coverage needs to planned for and set up at the outset
    </p>
</div>
